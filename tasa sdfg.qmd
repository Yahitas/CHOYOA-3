---
title: "Untitled"
format: html
editor: visual
---

## 

```{r}
# by creating a blank_canvas, we can reuse as the starting point for our later pieces 
# in this case, I am creating my own Canvas 
blank_canvas <- long_grid(
  x = seq(from = 0, to = 1, length.out = 2000),
  y = seq(from = 0, to = 1, length.out = 2000)
)  
```

```{r}
# this code below, is good but we can simplfy it later and use dplyr
# using this code for the "plot_painted_canvas", and over riding the blank_canvas now
plot_painted_canvas <- function(canvas, palette = NULL) {
  if(is.null(palette)) {
    palette <- c("#e5ddc8","#01949a","#004369","#db1f48")
  }
  canvas %>% 
    ggplot(aes(x, y, fill = paint)) + 
    geom_raster(show.legend = FALSE) +
    theme_void() +
    coord_equal() +
    scale_x_continuous(expand = c(0, 0)) +
    scale_y_continuous(expand = c(0, 0)) +
    scale_fill_gradientn(colours = palette)
}
```

```{r}
#combing blank_canvas with plot_painted_canvas 
blank_canvas |>
  mutate(paint = gen_perlin(x, y, frequency = 90, seed = 1234)) |>
  plot_painted_canvas()
```


```{r}
#for my project, will be creating a fractal pattern
fractal_plot <- function(seed) {
fractal_art <- function(fractal, generator, palette = NULL, ...) {
  blank_canvas |>
    mutate(
      paint = fracture(
        noise = generator,
        fractal = fractal,
        x = x, 
        y = y, 
        ...
      )
    ) |>
    plot_painted_canvas(palette = c("#e5c9d1", "#1d3e4b", "#480607", "#db1f48")) #changed the color 
}

gf <- function(x) x * .69 # the ._ , changes the density of the plot, with the lower you go, the more denisty is shown, while the higher you go the less density you have

fractal_art(ridged, gen_simplex, seed = 345, octaves = 20, gain = gf)
# tried seeds = 420, 666, 323, 290, 606, 123, 458, 452, 433(maybe), 598, 345, 

}
```

```{r}
fractal_plot(345)
```

```{r}
text <- geom_text(
  mapping = aes(0.5, 0.5, label = "不安"), 
  size = 60, 
  colour = "black", 
  fontface = "bold"
)
```


```{r}
fractal_plot(345) + text
```




```{r}
#fractal_plot(345) + mask
```



```{r}
text <- geom_text(
  mapping = aes(0.5, 0.5, label = "ART"), 
  size = 60, 
  colour = "black", 
  fontface = "bold"
)
```



```{r}
text <- geom_text(
  mapping = aes(0.5, 0.5, label = "ART"), 
  size = 60, 
  colour = "black", 
  fontface = "bold"
)
```


```{r}
functional_plot 
```




```{r}
polygon_layer <- function(x, y, fill = "white", alpha = .5) {
  geom_polygon(aes(x, y), fill = fill, alpha = alpha)
}
poly1 <- polygon_layer(x = c(1, 0, 0), y = c(0, 0, ))
poly2 <- polygon_layer(x = c(0, 1, 1), y = c(0, 0, 1))
poly3 <- polygon_layer(x = c(.3, 1, 1), y = c(0, 0, .7))
poly4 <- polygon_layer(x = c(0, 0, .7), y = c(.3, 1, 1))
```

```{r}
base <- ggplot() + 
  coord_equal(xlim = c(0, 1), ylim = c(0, 1)) + 
  theme_void() + 
  theme(panel.background = element_rect(fill = "#333333"))

base + poly1 + poly2 + poly3 + poly4
```

```{r}
library(ggplot2)
base + poly1 + poly2 + poly3 + poly4 + fractal_plot(345)
base + 
  as_group(poly1, poly2, poly3, poly4, id = "polygons", include = TRUE) +
  as_reference("polygons", id = "displacement_map") + 
  with_displacement(
    fractal_plot(345),
    x_map = ch_alpha("displacement_map"),
    y_map = ch_alpha("displacement_map"), 
    x_scale = 150,
    y_scale = -150
  )
```

```{r}
library(dplyr)
library(tibble)
library(ggplot2)
library(ggforce)
library(ggfx)
library(flametree)
library(ambient)
```


```{r}
fractal_plot(345) + with_dither(geo_segment())
```

```{r}
fractal_plot(345) + with_halftone_dither(geom_segment())
with_halftone_dither(fractal_plot(345) + geom_segment())
```

```{r}
library(dplyr)
library(tibble)
library(ggplot2)
library(ggforce)
library(ggfx)
library(flametree)
library(ambient)
```


